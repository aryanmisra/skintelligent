!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AUTOTUNE	../main.py	/^AUTOTUNE = tf.data.experimental.AUTOTUNE$/;"	kind:variable	line:13
CNN_model	../model.py	/^def CNN_model(x,y,z):$/;"	kind:function	line:97
CNN_model_sec	../model.py	/^def CNN_model_sec(x,y,z):$/;"	kind:function	line:120
action	../main.py	/^                    action="store_true")$/;"	kind:variable	line:21
args	../main.py	/^    args = parser.parse_args()$/;"	kind:variable	line:168
augmentations	../main.py	/^augmentations = [utils.flip, utils.color, utils.zoom, utils.rotate]$/;"	kind:variable	line:18
batch_size	../main.py	/^batch_size = 16$/;"	kind:variable	line:16
classes	../predict.py	/^        classes = model.predict(img)$/;"	kind:variable	line:43
classes	../predict.py	/^        classes = np.squeeze(classes)$/;"	kind:variable	line:46
classes_print	../predict.py	/^        classes_print = [ '%.2f' % elem for elem in np.squeeze(classes) ]$/;"	kind:variable	line:44
classes_sec_a	../predict.py	/^            classes_sec_a = model_sec_a.predict(img)$/;"	kind:variable	line:62
classes_sec_c	../predict.py	/^            classes_sec_c = model_sec_c.predict(img)$/;"	kind:variable	line:70
classes_sec_p	../predict.py	/^            classes_sec_p = model_sec_p.predict(img)$/;"	kind:variable	line:78
classes_sec_u	../predict.py	/^            classes_sec_u = model_sec_u.predict(img)$/;"	kind:variable	line:87
classes_sec_w	../predict.py	/^            classes_sec_w = model_sec_w.predict(img)$/;"	kind:variable	line:96
color	../utils.py	/^def color(x: tf.Tensor) -> tf.Tensor:$/;"	kind:function	line:130
epochs	../main.py	/^epochs = 250$/;"	kind:variable	line:17
fileList	../utils.py	/^def fileList(source): #creating a list of all json files in directory$/;"	kind:function	line:12
flip	../utils.py	/^def flip(x: tf.Tensor) -> tf.Tensor:$/;"	kind:function	line:123
idx_a	../predict.py	/^            idx_a = np.argmax(classes_sec_a)$/;"	kind:variable	line:63
idx_c	../predict.py	/^            idx_c = np.argmax(classes_sec_c)$/;"	kind:variable	line:71
idx_p	../predict.py	/^            idx_p = np.argmax(classes_sec_p)$/;"	kind:variable	line:79
idx_u	../predict.py	/^            idx_u = np.argmax(classes_sec_u)$/;"	kind:variable	line:88
idx_w	../predict.py	/^            idx_w = np.argmax(classes_sec_w)$/;"	kind:variable	line:97
im_path	../predict.py	/^        im_path = 'set_valid\/'+i$/;"	kind:variable	line:34
im_paths	../predict.py	/^im_paths = [f for f in listdir('set_valid\/') if isfile(join('set_valid\/', f))]$/;"	kind:variable	line:31
image_paths	../utils.py	/^def image_paths():$/;"	kind:function	line:105
img	../predict.py	/^        img = Image.open(im_path)$/;"	kind:variable	line:37
img	../predict.py	/^        img = img.resize((main.input_x,main.input_y), Image.ANTIALIAS)$/;"	kind:variable	line:38
img	../predict.py	/^        img = np.array(img) \/ 255.0$/;"	kind:variable	line:39
img	../predict.py	/^        img = np.reshape(img,[1,main.input_x,main.input_y,3])$/;"	kind:variable	line:40
img_dir	../utils.py	/^img_dir = '..\/images\/'$/;"	kind:variable	line:10
input_x	../main.py	/^input_x = 224$/;"	kind:variable	line:14
input_y	../main.py	/^input_y = 224$/;"	kind:variable	line:15
json_list	../utils.py	/^json_list = fileList(json_path)$/;"	kind:variable	line:20
json_path	../utils.py	/^json_path = '..\/json\/'$/;"	kind:variable	line:9
json_process	../utils.py	/^def json_process(constraint):$/;"	kind:function	line:24
json_process_se	../utils.py	/^def json_process_se(cat):$/;"	kind:function	line:55
learn_rate	../model.py	/^learn_rate = 0.001$/;"	kind:variable	line:4
length	../utils.py	/^def length(cat):$/;"	kind:function	line:84
main.py	../main.py	1;"	kind:file	line:1
maprange	../main.py	/^def maprange(x):$/;"	kind:function	line:69
model	../predict.py	/^model = keras.models.load_model('..\/saves\/model_N_38.h5')$/;"	kind:variable	line:17
model.py	../model.py	1;"	kind:file	line:1
model_sec_a	../predict.py	/^model_sec_a = keras.models.load_model('..\/saves\/model_A_11.h5', compile=False)$/;"	kind:variable	line:19
model_sec_c	../predict.py	/^model_sec_c = keras.models.load_model('..\/saves\/model_C_76.h5', compile=False)$/;"	kind:variable	line:21
model_sec_p	../predict.py	/^model_sec_p = keras.models.load_model('..\/saves\/model_P_14.h5', compile=False)$/;"	kind:variable	line:23
model_sec_u	../predict.py	/^model_sec_u = keras.models.load_model('..\/saves\/model_U_10.h5', compile=False)$/;"	kind:variable	line:25
model_sec_w	../predict.py	/^model_sec_w = keras.models.load_model('..\/saves\/model_W_9.h5', compile=False)$/;"	kind:variable	line:27
out	../predict.py	/^        out = [$/;"	kind:variable	line:52
out_dict	../predict.py	/^        out_dict = {"labels": [$/;"	kind:variable	line:109
parser	../main.py	/^parser = argparse.ArgumentParser()$/;"	kind:variable	line:19
plot_images	../main.py	/^def plot_images(dataset, n_images, samples_per_image):$/;"	kind:function	line:23
predict.py	../predict.py	1;"	kind:file	line:1
preprocess_image	../main.py	/^def preprocess_image(image):$/;"	kind:function	line:56
preprocess_load_image	../main.py	/^def preprocess_load_image(path):$/;"	kind:function	line:63
random_crop	../utils.py	/^    def random_crop(img):$/;"	kind:function	line:149
rotate	../utils.py	/^def rotate(x: tf.Tensor) -> tf.Tensor:$/;"	kind:function	line:120
scale	../utils.py	/^def scale(x, out_range=(-1, 1)):$/;"	kind:function	line:115
t0	../predict.py	/^t0 = time.time()$/;"	kind:variable	line:14
t0	../utils.py	/^    t0 = time.time()$/;"	kind:variable	line:160
t1	../predict.py	/^t1 = time.time()$/;"	kind:variable	line:29
t1	../utils.py	/^    t1 = time.time()$/;"	kind:variable	line:163
train	../main.py	/^def train(mode):$/;"	kind:function	line:73
utils.py	../utils.py	1;"	kind:file	line:1
visualization	../main.py	/^def visualization(history,mode):$/;"	kind:function	line:35
zoom	../utils.py	/^def zoom(x: tf.Tensor) -> tf.Tensor:$/;"	kind:function	line:138
